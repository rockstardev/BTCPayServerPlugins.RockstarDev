@using BTCPayServer.Abstractions.Contracts
@using BTCPayServer.Abstractions.Extensions
@using BTCPayServer.Abstractions.TagHelpers
@using BTCPayServer.TagHelpers
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model BTCPayServer.RockstarDev.Plugins.Payroll.ViewModels.PayrollSettingViewModel
@inject IScopeProvider ScopeProvider
@{
    var storeId = ScopeProvider.GetCurrentStoreId();
    Layout = "_Layout";
    ViewData.SetActivePage("VendorPay", "Update Plugin Settings", "VendorPay");
}

<form method="post" asp-action="Settings">
    <div class="sticky-header d-flex align-items-center justify-content-between">
        <h2 class="mb-0">@ViewData["Title"]</h2>
        <input type="submit" value="Save Changes" class="btn btn-primary" id="Edit" />
    </div>

    <partial name="_StatusMessage" />

    <div class="row">
        <div class="col-md-6">
            <div class="form-group d-flex align-items-center">
                <input asp-for="MakeInvoiceFileOptional" type="checkbox" class="btcpay-toggle me-3" />
                <label asp-for="MakeInvoiceFileOptional" class="form-label mb-0 me-1"></label>
                <span asp-validation-for="MakeInvoiceFileOptional" class="text-danger"></span>
            </div>
            <div class="form-group d-flex align-items-center">
                <input asp-for="PurchaseOrdersRequired" type="checkbox" class="btcpay-toggle me-3" />
                <label asp-for="PurchaseOrdersRequired" class="form-label mb-0 me-1"></label>
                <span asp-validation-for="PurchaseOrdersRequired" class="text-danger"></span>
            </div>

            <h3>Emails</h3>
            @{
                var storeEmailSettingsConfigured = (bool)ViewData["StoreEmailSettingsConfigured"];
            }
            <div class="form-group d-flex align-items-center">
                
                <input asp-for="EmailOnInvoicePaid" type="checkbox" class="btcpay-toggle me-3" id="emailToggle" disabled="@(storeEmailSettingsConfigured ? null : "disabled")" />
                <div>
                    <label asp-for="EmailOnInvoicePaid" class="form-check-label"></label>
                    <span asp-validation-for="EmailOnInvoicePaid" class="text-danger"></span> 
                    @if (!storeEmailSettingsConfigured)
                    {
                        <div class="text-secondary">
                            <span text-translate="true">Your email server has not been configured.</span>
                            <a asp-controller="UIStores" asp-action="StoreEmailSettings" text-translate="true" asp-route-storeId="@storeId">Please configure it first.</a>
                        </div>
                    }
                </div>
            </div>
            <div id="emailTemplateGroup" style="display: none;">
                <div class="form-group">
                    <label asp-for="EmailOnInvoicePaidSubject" class="form-label">Customize Subject</label>
                    <input asp-for="EmailOnInvoicePaidSubject" class="form-control" />
                    <span asp-validation-for="EmailOnInvoicePaidSubject" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="EmailOnInvoicePaidBody" class="form-label">Customize Email Template</label>
                    <textarea asp-for="EmailOnInvoicePaidBody" class="form-control" rows="8"></textarea>
                    <span asp-validation-for="EmailOnInvoicePaidBody" class="text-danger"></span>
                </div>
            </div>
        </div>
    </div>
</form>


@section PageFootContent {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const emailToggle = document.getElementById('emailToggle');
            const emailTemplateGroup = document.getElementById('emailTemplateGroup');
            const toggleEmailTemplateVisibility = () => {
                emailTemplateGroup.style.display = emailToggle.checked ? 'block' : 'none';
            };
            emailToggle.addEventListener('change', toggleEmailTemplateVisibility);
            toggleEmailTemplateVisibility();
        });
    </script>
}