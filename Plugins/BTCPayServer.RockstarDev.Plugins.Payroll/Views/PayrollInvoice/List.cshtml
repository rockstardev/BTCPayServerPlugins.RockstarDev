@using BTCPayServer.Abstractions.Contracts
@using BTCPayServer.Abstractions.Extensions
@using BTCPayServer.Abstractions.Models
@using BTCPayServer.RockstarDev.Plugins.Payroll.Data.Models
@using static BTCPayServer.RockstarDev.Plugins.Payroll.Controllers.PayrollInvoiceController
@inject IScopeProvider ScopeProvider
@model PayrollInvoiceListViewModel
@{
    Layout = "_Layout"; // adding so PageFootContent section is detected
    ViewData.SetActivePage("VendorPay", "Vendor Invoices", "VendorPay");

    var storeId = ScopeProvider.GetCurrentStoreId();
}

<form method="post">
    <div class="sticky-header-setup"></div>
    <div class="sticky-header d-sm-flex align-items-center justify-content-between">
        <h2 class="mb-0">@ViewData["Title"]</h2>
        <div class="d-flex gap-3 mt-3 mt-sm-0">
            <div class="dropdown">
                <button id="StatusOptionsToggle" class="btn btn-secondary dropdown-toggle dropdown-toggle-custom-caret" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    <span>Options</span>
                </button>
                <div class="dropdown-menu" aria-labelledby="StatusOptionsToggle">
                    <a asp-controller="Public" asp-action="ListInvoices" asp-route-storeId="@storeId" class="dropdown-item" target="_blank">
                        Share Invoice Upload Link <i class="fa fa-external-link"></i>
                    </a>
                    <a asp-controller="PayrollSetting" asp-action="Settings" asp-route-storeId="@storeId" class="dropdown-item">
                        Settings
                    </a>
                </div>
            </div>
            <a asp-controller="PayrollInvoice" asp-action="Upload" asp-route-storeId="@storeId" class="btn btn-primary">Admin Upload Invoice</a>
            <a asp-controller="PayrollUser" asp-action="List" asp-route-storeId="@storeId" class="btn btn-secondary">Manage Users</a>
        </div>
    </div>
</form>

<partial name="_StatusMessage" />

<nav id="SectionNav" class="mb-3">
    <div class="nav">
        <a id="active-view"
           asp-action="List"
           asp-route-storeId="@storeId"
           class="nav-link @(!Model.All ? "active" : "")"
           role="tab">Active</a>

        <a id="all-view"
           asp-action="List"
           asp-route-storeId="@storeId"
           asp-route-all="true"
           class="nav-link @(Model.All ? "active" : "")"
           role="tab">All</a>
    </div>
</nav>

@if (Model.PayrollInvoices.Any())
{
    <form method="post" asp-action="MassAction" asp-route-storeId="@storeId">
        <div class="table-responsive">
            <table class="table table-hover mass-action">
                <thead class="mass-action-head">
                    <tr>
                        <th class="mass-action-select-col only-for-js">
                            <input type="checkbox" class="form-check-input mass-action-select-all" />
                        </th>
                        <th class="date-col">
                            <div class="d-flex align-items-center gap-1">
                                Created At
                                <button type="button" class="btn btn-link p-0 fa fa-clock-o switch-time-format only-for-js" title="Switch date format"></button>
                            </div>
                        </th>
                        <th scope="col">User</th>
                        <th scope="col">Destination</th>
                        <th scope="col">Amount</th>
                        <th scope="col">State</th>
                        @if (Model.PurchaseOrdersRequired)
                        {
                            <th scope="col">Purchase Order</th>
                        }
                        else
                        {
                            <th scope="col">Description</th>
                        }
                        <th scope="col" class="text-end"></th>
                    </tr>
                </thead>
                <thead class="mass-action-actions">
                    <tr>
                        <th class="mass-action-select-col only-for-js">
                            <input type="checkbox" class="form-check-input mass-action-select-all" />
                        </th>
                        <th colspan="8">
                            <div class="d-flex flex-wrap align-items-center justify-content-between gap-3">
                                <div>
                                    <strong class="mass-action-selected-count">0</strong>
                                    selected
                                </div>
                                <div class="d-inline-flex align-items-center gap-3">
                                    <button type="submit" name="command" value="emailconfirmation" id="emailconfirmation" class="btn btn-link">
                                        <vc:icon symbol="actions-email" />
                                        Email Confirmation
                                    </button>
                                    <button type="submit" name="command" value="payinvoices" id="payinvoices" class="btn btn-link">
                                        <vc:icon symbol="actions-send" />
                                        Pay Invoices
                                    </button>
                                    <button type="submit" name="command" value="download" id="download" class="btn btn-link">
                                        <vc:icon symbol="payment-receive" />
                                        Download Invoices
                                    </button>
                                    <button type="submit" name="command" value="markpaid" id="markpaid" class="btn btn-link">
                                        <vc:icon symbol="checkmark" />
                                        Mark Paid
                                    </button>
                                    <button type="submit" name="command" value="export" id="export" class="btn btn-link">
                                        <vc:icon symbol="checkmark" />
                                        Export CSV
                                    </button>
                                </div>
                            </div>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var pp in Model.PayrollInvoices)
                    {
                        <tr id="invoice_@pp.Id" class="mass-action-row">
                            <td class="only-for-js align-middle">
                                <input name="selectedItems" type="checkbox" class="form-check-input mass-action-select" value="@pp.Id" />
                            </td>
                            <td>@pp.CreatedAt.ToBrowserDate()</td>
                            <td>
                                @pp.Name
                                <a href="mailto:@pp.Email"><i class="fa fa-envelope-o"></i></a>
                            </td>
                            <td>
                                <vc:truncate-center text="@pp.Destination" link="https://mempool.space/address/@pp.Destination" classes="truncate-center-id" />

                                <a href="#" class="show-qr" data-invoice="bitcoin:@(pp.Destination)">
                                    <vc:icon symbol="scan-qr" />
                                </a>
                                <div class="qr-container" style="display: none;">
                                    <vc:qr-code data="bitcoin:@(pp.Destination)" />
                                </div>

                            </td>
                            <td>@pp.Amount @pp.Currency</td>
                            <td>
                                @if (pp.State == PayrollInvoiceState.Completed && !string.IsNullOrEmpty(pp.TxnId))
                                {
                                    <a href="https://mempool.space/tx/@pp.TxnId" target="_blank">
                                        @pp.State.ToString()
                                    </a>
                                }
                                else
                                {
                                    @pp.State.ToString()
                                }
                                @if (pp.State == PayrollInvoiceState.Completed && pp.PaidAt.HasValue)
                                {
                                    <div>@pp.PaidAt?.ToBrowserDate()</div>
                                }
                            </td>
                            <td>
                                @if (Model.PurchaseOrdersRequired)
                                {
                                    <span style="max-width: 250px;">@pp.PurchaseOrder</span>
                                }
                                @if (!string.IsNullOrEmpty(pp.Description))
                                {
                                    @if (!String.IsNullOrEmpty(pp.PurchaseOrder))
                                    {
                                        <span> - </span>
                                    }
                                    <span class="text-break" data-bs-toggle="tooltip" title="@pp.Description" style="cursor: pointer;">
                                        <span style="max-width: 250px;">@pp.Description</span>
                                    </span>
                                }
                            </td>
                            <td class="text-end">
                                @if (!string.IsNullOrEmpty(pp.InvoiceUrl))
                                {
                                    <a href="/Storage/@pp.InvoiceUrl">View Invoice</a>
                                }
                                @if (pp.State == PayrollInvoiceState.AwaitingApproval)
                                {
                                    @if (!string.IsNullOrEmpty(pp.InvoiceUrl))
                                    {
                                        <span>-</span>
                                    }
                                    <a asp-controller="PayrollInvoice"
                                       asp-action="Delete"
                                       asp-route-id="@pp.Id"
                                       class="text-danger">
                                        Delete
                                    </a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @section PageFootContent {
            <script>
            document.addEventListener("DOMContentLoaded", function () {
                var showQrLinks = document.querySelectorAll('.show-qr');
                showQrLinks.forEach(function (link) {
                    link.addEventListener('click', function (event) {
                        event.preventDefault();
                        var qrContainer = this.parentNode.querySelector('.qr-container');
                        if (qrContainer.style.display === 'none') {
                            qrContainer.style.display = 'block';
                        } else {
                            qrContainer.style.display = 'none';
                        }
                    });
                });
            });

            const ppProgresses = document.getElementsByClassName("ppProgress");
            for (var i = 0; i < ppProgresses.length; i++) {
                var pp = ppProgresses[i];
                var ppId = pp.getAttribute("data-pp");
                var template = document.getElementById("tooptip_template_" + ppId);
                pp.setAttribute("title", template.innerHTML);
            }

            function allSelectedInState(state) {
                var allCheckedItems = document.querySelectorAll('input[type="checkbox"].mass-action-select:checked');
                if (allCheckedItems.length === 0) return false;
                return Array.from(allCheckedItems).every(function (checkbox) {
                    var row = checkbox.closest('tr');
                    var stateCell = row.querySelector('td:nth-child(7)');
                    return stateCell.textContent.trim() === state;
                });
            }

            function selectedItemInState(states) {
                var allCheckedItems = document.querySelectorAll('input[type="checkbox"]:checked');
                return Array.from(allCheckedItems).every(function (checkbox) {
                    var row = checkbox.closest('tr');
                    var stateCell = row.querySelector('td:nth-child(7)');
                    return states.includes(stateCell.textContent.trim());
                });
            }

            function toggleButtons() {
                const emailConfirmation = document.getElementById('emailconfirmation') instanceof HTMLElement;
                const markPaidButton = document.getElementById('markpaid') instanceof HTMLElement;
                const payInvoicesButton = document.getElementById('payinvoices') instanceof HTMLElement;
                const downloadButton = document.getElementById('download') instanceof HTMLElement;
                const exportInvoicesButton = document.getElementById('export') instanceof HTMLElement;

                const allCheckedItems = document.querySelectorAll('input[type="checkbox"]:checked');
                if (allCheckedItems.length > 0) {
                    emailConfirmation.style.display = allSelectedInState('Completed') ? 'inline-block' : 'none';
                    markPaidButton.style.display = allSelectedInState('AwaitingApproval', 'AwaitingPayment', 'InProgress') ? 'inline-block' : 'none';
                    payInvoicesButton.style.display = allSelectedInState('AwaitingApproval', 'AwaitingPayment') ? 'inline-block' : 'none';
                    downloadButton.style.display = 'inline-block';
                    exportInvoicesButton.style.display = allSelectedInState('Completed') ? 'inline-block' : 'none';
                } else {
                    emailConfirmation.style.display = 'none';
                    markPaidButton.style.display = 'none';
                    payInvoicesButton.style.display = 'none';
                    downloadButton.style.display = 'none';
                    exportInvoicesButton.style.display = 'none';
                }
            }
            document.addEventListener('change', function () {
                toggleButtons()
            });
            toggleButtons();
        </script>
        }

        <partial name="_Confirm" model="@(new ConfirmModel("Delete Invoice", "Do you really want to delete the invoice...", "Delete"))" />
    </form>
}
else
{
    <p class="text-secondary mt-4">
        There are no active invoices submitted for payroll.
    </p>
}