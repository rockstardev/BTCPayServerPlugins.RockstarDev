@model BTCPayServer.Models.InvoicingModels.CheckoutModel
@inject MarkPaidMethodsRegistry Registry
@inject Safe Safe

@foreach (var m in Registry.Methods)
{
    var component = MarkPaidUi.ComponentNameFor(m);
    <text>
        <template id="@component">
            <div>
                <a class="btn btn-primary rounded-pill w-100 mt-4" href="#" v-on:click.prevent="markAsPaid">Mark Settled</a>
            </div>
        </template>
        <script>
            Vue.component(@Safe.Json(component), {
                props: ['model'],
                template: @Safe.Json("#" + component),
                data() {
                    return {isProcessing: false};
                },
                mounted() {
                    const method = this.model.paymentMethodId;
                    const observer = new MutationObserver(() => {
                        const settled = document.querySelector('#settled');
                        if (settled && !settled.dataset.updated) {
                            const h4 = settled.querySelector('h4');
                            if (h4) {
                                h4.textContent = `${h4.textContent} - ${method}`;
                                settled.dataset.updated = 'true';
                            }
                        }
                    });
                    observer.observe(document.getElementById('Checkout'), {childList: true, subtree: true});
                },
                methods: {
                    async markAsPaid() {
                        if (this.isProcessing) return;
                        this.isProcessing = true;
                        const response = await fetch(this.model.invoiceBitcoinUrl, {
                            method: 'POST',
                            headers: {'X-Requested-With': 'RockstarHttpRequester'}
                        });
                        if ((await response.json()).success) {
                            
                        }

                        this.isProcessing = false;
                    }
                }
            });
        </script>
    </text>
}

<!-- Update settled title to show payment method on page reload -->
<!-- Runs globally because settled view doesn't render payment method components -->
<script>
    (function() {
        const updateTitle = () => {
            const settled = document.querySelector('#settled');
            if (settled && !settled.dataset.updated) {
                const method = window.location.pathname.split('/').pop();
                if (method && method !== 'i') {
                    const h4 = settled.querySelector('h4');
                    if (h4 && h4.textContent && h4.textContent.trim()) {
                        h4.textContent = `${h4.textContent} - ${method}`;
                        settled.dataset.updated = 'true';
                        return true;
                    }
                }
            }
            return false;
        };
        
        // Try immediately and retry with delays for i18n to load
        if (!updateTitle()) {
            setTimeout(() => { if (!updateTitle()) setTimeout(updateTitle, 200); }, 100);
        }
    })();
</script>
