@model BTCPayServer.Models.InvoicingModels.CheckoutModel
@inject MarkPaidMethodsRegistry Registry
@inject Safe Safe

@foreach (var m in Registry.Methods)
{
    var component = MarkPaidUi.ComponentNameFor(m);
    <text>
        <template id="@component">
            <div>
                <a class="btn btn-primary rounded-pill w-100 mt-4" href="#" v-on:click.prevent="markAsPaid">Mark Settled</a>
            </div>
        </template>
        <script>
            Vue.component(@Safe.Json(component), {
                props: ['model'],
                template: @Safe.Json("#" + component),
                data() {
                    return {isProcessing: false};
                },
                mounted() {
                    const updateSettledTitle = () => {
                        const settled = document.querySelector('#settled');
                        if (settled) {
                            const h4 = settled.querySelector('h4');
                            if (h4 && h4.textContent && !h4.textContent.includes(' - ') && window.markPaidSettledMethod) {
                                h4.textContent = `${h4.textContent} - ${window.markPaidSettledMethod}`;
                            }
                        }
                    };

                    const observer = new MutationObserver(updateSettledTitle);
                    observer.observe(document.getElementById('Checkout'), {childList: true, subtree: true, characterData: true});
                },
                methods: {
                    async markAsPaid() {
                        if (this.isProcessing) return;
                        this.isProcessing = true;
                        const response = await fetch(this.model.invoiceBitcoinUrl, {
                            method: 'POST',
                            headers: {'X-Requested-With': 'RockstarHttpRequester'}
                        });
                        if ((await response.json()).success) {
                            window.markPaidSettledMethod = this.model.paymentMethodId;
                        }

                        this.isProcessing = false;
                    }
                }
            });
        </script>
    </text>
}

<!-- Update settled title to show payment method on page reload -->
<!-- Runs globally because settled view doesn't render payment method components -->
<!-- Only runs once even if multiple MarkPaid methods are registered -->
<script>
    if (!window.markPaidGlobalSetup) {
        window.markPaidGlobalSetup = true;
        (function () {
            // Check if on invoice page
            if (!window.location.pathname.match(/\/(i|invoice)\//)) return;

            const markPaidMethods = @Safe.Json(Registry.Methods);

            const updateTitle = () => {
                // Get payment method from srvModel
                const method = initialSrvModel?.paymentMethodId;
                if (!method) return;

                // Only run for MarkPaid payment methods
                if (!markPaidMethods.includes(method)) return;

                const settled = document.querySelector('#settled');
                if (settled) {
                    const h4 = settled.querySelector('h4');
                    if (h4 && h4.textContent && h4.textContent.trim() && !h4.textContent.includes(` - ${method}`)) {
                        h4.textContent = `${h4.textContent} - ${method}`;
                    }
                }
            };

            // Listen for i18next language changes
            if (window.i18next) {
                window.i18next.on('languageChanged', () => {
                    Vue.nextTick(() => {
                        updateTitle();
                    });
                });
            }
        })();
    }
</script>
