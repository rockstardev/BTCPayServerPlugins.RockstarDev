@using BTCPayServer.Abstractions.Contracts
@using BTCPayServer.Abstractions.Extensions
@model IndexViewModel
@inject IScopeProvider ScopeProvider
@{
    var storeId = ScopeProvider.GetCurrentStoreId();
    ViewData.SetActivePage(BitcoinStackerPlugin.PluginNavKey, "Exchange Orders", "ExchangeOrder");
}

<form method="post">
    <div class="sticky-header-setup"></div>
    <div class="sticky-header d-sm-flex align-items-center justify-content-between">
        <h2 class="mb-0">@ViewData["Title"]</h2>
        <div class="d-flex gap-3 mt-3 mt-sm-0">
            <div class="dropdown">
                <button id="StatusOptionsToggle" class="btn btn-secondary dropdown-toggle dropdown-toggle-custom-caret" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    <span>Options</span>
                </button>
                <div class="dropdown-menu" aria-labelledby="StatusOptionsToggle">
                    <a asp-action="Settings" asp-route-storeId="@storeId" class="dropdown-item">
                        Settings
                    </a>
                </div>
            </div>
            <a asp-controller="ExchangeOrder" asp-action="Create" asp-route-storeId="@storeId"
               class="btn btn-primary">Create Exchange Order</a>
        </div>
    </div>
</form>

<partial name="_StatusMessage" />

@if (Model.List.Any())
{
    <div class="table-responsive-md">
        <table class="table table-hover">
            <thead>
            <tr>
                <th scope="col">Order ID</th>
                <th scope="col">Created</th>
                <th scope="col">Operation</th>
                <th scope="col">Amount</th>
                <th scope="col">State</th>
                <th scope="col">Created By</th>
                <th scope="col">Delay Until</th>
                <th scope="col">Executed</th>
                <th scope="col">Cost Basis</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var payout in Model.List)
            {
                <tr>
                    <td>@payout.Id</td>
                    <td>@payout.Created.ToBrowserDate()</td>
                    <td>@payout.Operation</td>
                    <td>@payout.Amount.ToString("0.########")</td>
                    <td>@payout.State</td>
                    <td>@payout.CreatedBy</td>
                    <td>@payout.DelayUntil?.ToBrowserDate()</td>
                    <td>@payout.Executed</td>
                    <td>@payout.CostBasis</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
}
else
{
    <p class="text-secondary mt-4">
        No exchange orders available at this time.
    </p>
}