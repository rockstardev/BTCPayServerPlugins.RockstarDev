@using System.Globalization
@using BTCPayServer.Abstractions.Extensions
@using BTCPayServer.RockstarDev.Plugins.TransactionCounter
@model BTCPayServer.RockstarDev.Plugins.TransactionCounter.ViewModels.CounterConfigViewModel
@{
    Layout = "_Layout";
    ViewData.SetActivePage(PluginNavPages.Counter, "Stores Transaction Counter");
}

@section PageHeadContent {
    <style>
        input[type="checkbox"] ~ div > .info-note,
        input[type="checkbox"] ~ div > .subsettings {
            display: none;
        }

        input[type="checkbox"]:checked ~ div > .info-note {
            display: flex;
            max-width: 44em;
        }

        input[type="checkbox"]:checked ~ div > .subsettings {
            display: block;
        }

        .subsettings > :last-child {
            margin-bottom: 0 !important;
        }
    </style>
}

<form method="post">
    <div class="sticky-header d-flex align-items-center justify-content-between">
        <h2>@ViewData["Title"]</h2>
        <button id="page-primary" type="submit" class="btn btn-primary" name="command" value="Save">Save</button>
    </div>
    <partial name="_StatusMessage"/>

    <div class="row">
        <div class="col-xl-10 col-xxl-constrain">
            <div class="d-flex flex-column">
                <div class="form-group mb-5">
                    <div class="d-flex gap-3">
                        <input asp-for="Enabled" type="checkbox" class="btcpay-toggle"/>
                        <div>
                            <label asp-for="Enabled" class="form-label mb-0"></label>
                            <span asp-validation-for="Enabled" class="text-danger"></span>

                            <div class="info-note mt-2 text-warning" role="alert">
                                <span text-translate="true">This would display the transaction count of all stores. To select specific stores, turn off the toggle below and select stores of choice.</span>
                            </div>
                            <div class="info-note mt-2 text-warning" role="alert">
                                <span text-translate="true">Click the</span>
                                <a asp-controller="PublicCounter" asp-action="Counter" target="_blank"
                                   rel="noopener noreferrer">link</a>
                                <span text-translate="true">to view transaction count.</span>
                                <span text-translate="true">And on this</span>
                                <a asp-controller="PublicCounter" asp-action="ApiCounter" target="_blank"
                                   rel="noopener noreferrer">link</a>
                                <span text-translate="true">to view transaction count API.</span>
                            </div>

                            <div class="subsettings">
								<div class="form-group mt-3">
									<label asp-for="ExcludedStoreIds">Excluded Stores from transaction counter</label>
									<textarea asp-for="ExcludedStoreIds"
											  class="form-control"
											  rows="3"
											  placeholder="storeId1,storeId2,storeId3"></textarea>
									<span asp-validation-for="ExcludedStoreIds" class="text-danger"></span>
									<small class="form-text text-muted">
										Enter comma-separated store IDs to exclude from the transaction counter.
									</small>
								</div>

                                <div class="d-flex my-3">
                                    <div class="form-group mb-0 w-250px">
                                        <label asp-for="StartDate" class="form-label"></label>
                                        <div class="input-group flex-nowrap">
                                            <input type="datetime-local" asp-for="StartDate"
                                                   value="@(Model.StartDate.ToString("u", CultureInfo.InvariantCulture))"
                                                   class="form-control flatdtpicker"
                                                   placeholder="No start date has been set"/>
                                            <button class="btn btn-secondary input-group-clear px-3" type="button"
                                                    title="Clear">
                                                <vc:icon symbol="close"/>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="form-group mb-0 w-250px">
                                        <label asp-for="EndDate" class="form-label"></label>
                                        <div class="input-group flex-nowrap">
                                            <input type="datetime-local" asp-for="EndDate"
                                                   value="@(Model.EndDate?.ToString("u", CultureInfo.InvariantCulture))"
                                                   class="form-control flatdtpicker"
                                                   placeholder="No end date has been set"/>
                                            <button class="btn btn-secondary input-group-clear px-3" type="button"
                                                    title="Clear">
                                                <vc:icon symbol="close"/>
                                            </button>
                                        </div>
                                    </div>
                                    <span asp-validation-for="StartDate" class="text-danger"></span>
                                    <span asp-validation-for="EndDate" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label asp-for="Password" class="form-label"></label>
                                    <input asp-for="Password" class="form-control"/>
                                    <span asp-validation-for="Password" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label asp-for="HtmlTemplate" class="form-label"></label>
                                    <textarea asp-for="HtmlTemplate" class="form-control" rows="10"></textarea>
                                    <small class="form-text text-muted">
                                        Use <code>{COUNTER}</code> where the number should be inserted.
                                    </small>
                                </div>

								<div class="form-group mt-4">
									<label asp-for="ExtraTransactions" class="form-label"></label>
									<small class="form-text text-muted">
										Add manual transactions as a JSON array. Must be a valid JSON array. Times are in UTC.
									</small>
									<textarea asp-for="ExtraTransactions"
											  id="extra-transactions-json"
											  class="form-control"
											  rows="8"
											  placeholder='[{count1},{count2}]'></textarea>
									<small id="emailHelp" class="form-text text-muted">Example:[{"source": "bar", "start": "2025-06-19T14:00:00Z", "end": "2025-06-21T17:00:00Z", "count": 100}]</small>
                                    <span asp-validation-for="ExtraTransactions" class="text-danger"></span>
                                    <div class="mt-2 d-flex align-items-center">
										<button type="button" class="btn btn-sm btn-secondary me-2" onclick="validateAndPreview()">Test JSON</button>
										<small id="json-feedback-text" class="form-text"></small>
									</div>
								</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>



@section PageFootContent {
	<script>
		function validateAndPreview() {
			const input = document.getElementById("extra-transactions-json").value;
			const feedbackText = document.getElementById("json-feedback-text");

			try {
				const data = JSON.parse(input);
				if (!Array.isArray(data)) {
					throw new Error("Input must be a JSON array.");
				}
				data.forEach((item, index) => {
					if (!item.source || !item.start || !item.end || typeof item.count !== 'number') {
						throw new Error(`Missing or invalid properties in entry ${index + 1}`);
					}
				});
				feedbackText.textContent = "JSON is valid.";
				feedbackText.className = "form-text text-success";
			} catch (err) {
				feedbackText.textContent = "Invalid JSON: " + err.message;
				feedbackText.className = "form-text text-danger";
			}
		}
	</script>
}
